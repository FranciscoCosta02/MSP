/**
 * MyClinic API
 * This API exposes endpoints to manage a clinic.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("ClientsApi", () => {
  let instance: api.ClientsApi
  beforeEach(function() {
    instance = new api.ClientsApi(config)
  });

  test("addClient", () => {
    const body: api.ClientDTO = undefined
    return expect(instance.addClient(body, {})).resolves.toBe(null)
  })
  test("getClient", () => {
    const username: string = "username_example"
    return expect(instance.getClient(username, {})).resolves.toBe(null)
  })
  test("getRecommendDoctors", () => {
    const username: string = "username_example"
    return expect(instance.getRecommendDoctors(username, {})).resolves.toBe(null)
  })
})

describe("DoctorsApi", () => {
  let instance: api.DoctorsApi
  beforeEach(function() {
    instance = new api.DoctorsApi(config)
  });

  test("addDoctor", () => {
    const body: api.DoctorDTO = undefined
    return expect(instance.addDoctor(body, {})).resolves.toBe(null)
  })
  test("getDoctors", () => {
    return expect(instance.getDoctors({})).resolves.toBe(null)
  })
})

describe("HouseholdApi", () => {
  let instance: api.HouseholdApi
  beforeEach(function() {
    instance = new api.HouseholdApi(config)
  });

  test("getClientHousehold", () => {
    const username: string = "username_example"
    return expect(instance.getClientHousehold(username, {})).resolves.toBe(null)
  })
})

describe("MedicalHistoryApi", () => {
  let instance: api.MedicalHistoryApi
  beforeEach(function() {
    instance = new api.MedicalHistoryApi(config)
  });

  test("getClientMedicalHistory", () => {
    const username: string = "username_example"
    return expect(instance.getClientMedicalHistory(username, {})).resolves.toBe(null)
  })
})

describe("PrescriptionApi", () => {
  let instance: api.PrescriptionApi
  beforeEach(function() {
    instance = new api.PrescriptionApi(config)
  });

  test("getClientPrescriptions", () => {
    const username: string = "username_example"
    return expect(instance.getClientPrescriptions(username, {})).resolves.toBe(null)
  })
})

describe("ScheduleApi", () => {
  let instance: api.ScheduleApi
  beforeEach(function() {
    instance = new api.ScheduleApi(config)
  });

  test("addAppointment", () => {
    const body: api.AddAppointmentDTO = undefined
    const username: string = "username_example"
    return expect(instance.addAppointment(body, username, {})).resolves.toBe(null)
  })
  test("addExam", () => {
    const body: api.AddExamDTO = undefined
    const username: string = "username_example"
    return expect(instance.addExam(body, username, {})).resolves.toBe(null)
  })
  test("checkIn", () => {
    const username: string = "username_example"
    const type: string = "type_example"
    const id: number = 789
    return expect(instance.checkIn(username, type, id, {})).resolves.toBe(null)
  })
  test("getClientSchedule", () => {
    const username: string = "username_example"
    return expect(instance.getClientSchedule(username, {})).resolves.toBe(null)
  })
})

